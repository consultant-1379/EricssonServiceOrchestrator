kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: datalake
  namespace: eso-logging-kubernetes-test
spec:
  replicas: 1
  serviceName: datalake-service
  template:
    metadata:
      labels:
        component: datalake
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "sysctl",
            "image": "busybox",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: elasticsearch
        image: armdocker.rnd.ericsson.se/proj-pigs/datalake-es
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        resources:
          limits:
            memory: 1Gi
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ES_ENV_01
          value: cluster.name=datalake
        - name: ES_ENV_02
          value: node.name=$(NODE_NAME)
        - name: ES_ENV_03
          value: bootstrap.memory_lock=false
        - name: ES_JAVA_OPTS
          value: -Xms512m -Xmx512m
        ports:
        - name: http
          containerPort: 9200
          protocol: TCP
        - name: native
          containerPort: 9300
          protocol: TCP
        volumeMounts:
        - name: datalake-data
          mountPath: /opt/elasticsearch/data

  volumeClaimTemplates:
  - metadata:
      name: datalake-data
      annotations:
        volume.beta.kubernetes.io/storage-class: "erikube-nfs"
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 1Gi
